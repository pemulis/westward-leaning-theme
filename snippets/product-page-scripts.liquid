<!-- Product image gallery. -->
<script>$('#gallery').enhanceGallery();</script>


<!-- Cross-Sell widget. -->
{% assign cscurrentpage = 'product' %}
{% if shop.metafields.shopCrosssell.settings != null %}


  <script type="text/javascript" charset="utf-8">
  //<![CDATA[
  
  var crosssellsettings = eval({{ shop.metafields.shopCrosssell.settings | json }});

    //product specific settings
    var crossselltitleproductpage = crosssellsettings[0]['titleproductpage'];
    var crossselltitleproductpagedefault = crosssellsettings[0]['titleproductpagedefault']; 
    var crosssellmaxitems = crosssellsettings[0]['productpagemaxitems'];
    var crosssellshowdefault = crosssellsettings[0]['showdefault']; 

  //]]>
  </script> 

{% endif %}

<script type="text/javascript" charset="utf-8">
  //<![CDATA[
  var tmpdata = '';
  var tmptitle = ''; 
  
    //First of all, see if this product has any handpicked crosssell items
    if(crosssellshowdefault != '4')
    {  
      {% if product.metafields.productDetails.crosssell != null %}
        //See if the selected product has any cross-sell items
        tmpdata = eval({{ product.metafields.productDetails.crosssell | json }}); 
        if(crossselltitleproductpage.length) // if a title has been selected
        {
          tmptitle = '<h3 class="crossselltitle">'+crossselltitleproductpage+'</h3>';
        }
      {% endif %}
    }
    if(crosssellshowdefault == '1' || (crosssellshowdefault == '2' && tmpdata == '')) 
    {
      //Show default cross-sell items on all product pages? Override all
      //See if any default cross-sell items have been selected for the product page
      {% if shop.metafields.shopCrosssell.default != null %}
        tmpdata = eval({{ shop.metafields.shopCrosssell.default | json }}); 
        if(crossselltitleproductpagedefault.length) // if a default products title has been selected
        {
          tmptitle = '<h3 class="crossselltitle">'+crossselltitleproductpagedefault+'</h3>';
        }
      {% endif %} 
    } 
 
  if(tmpdata)
  {
    jQuery('#cross-sell').append(tmptitle + '<ul class="cross-sell"></ul>'); // write the title and container to the page
    var crosssell = [];
    var order = '';
    //Set the maximum number of items that should be shown?
    var numproducts = (crosssellmaxitems < tmpdata.length) ? crosssellmaxitems : tmpdata.length;
    //objects tend to randomize the output, so put the handles into an array first
    for (var i=0; i<numproducts; i++)
    {
      order = (Number(tmpdata[i]['order']) - 1); 
      crosssell[order] = tmpdata[i]['handle']; 
    } 
 
    if (crosssell.length && crosssell[0] !== '')
    { 
      var list = jQuery('ul.cross-sell');
      var leftTestWrapper = jQuery('#left-test-wrapper'); // click-through arrows code!
      var rightTestWrapper = jQuery('#right-test-wrapper');
      for (var j=0; j<crosssell.length; j++)
      {
        jQuery.ajax({
        cache: true,
        async: false,
        dataType: "json",
        success: function(product) {
          // Now output the products now that the data has loaded.
          var title = product.title;
          var split = title.split(' ', 1);
          var model_no = split[0];
         if(product.images[0])
         {
           list.append('<li><a href="' + product.url +'"><div class="image"><img src="' + product.images[0].replace(/(.JPG|.jpg|.PNG|.png|.JPEG|.jpeg|.GIF|.gif)/, '_medium$1') + '" /></div><div class="producttitle">' + product.type + '</div><div class="model_no">' + model_no + '</div></a></li>');
           if (j==0) { leftTestWrapper.append('<a href="' + product.url + '" id="left-arrow-link"><div class="left-test">{{ "arrow_light_left.jpg" | asset_url | img_tag: 'Light Left Arrow', 'light-left-arrow' }}{{ "arrow_dark_left.jpg" | asset_url | img_tag: 'Dark Left Arrow', 'dark-left-arrow' }}</div></a>'); } // some more click-through arrows code
           if (j==3) { rightTestWrapper.append('<a href="' + product.url + '" id="right-arrow-link"><div class="right-test">{{ "arrow_light_right.jpg" | asset_url | img_tag: 'Light Right Arrow', 'light-right-arrow' }}{{ "arrow_dark_right.jpg" | asset_url | img_tag: 'Dark Right Arrow', 'dark-right-arrow' }}</div></a>'); }
          }
          else
          {
            list.append('<li><div class="image"><a href="' + product.url +'"><img src="https://cdn.shopify.com/s/images/admin/no-image-large.gif" /></a></div><div class="producttitle"><a href="' + product.url + '">' + product.title + ' {{ model_name.first }}</a></div><div class="money"><a href="' + product.url + '">' + Shopify.formatMoney(product.price, '{{ shop.money_format }}') + '</a></div></li>'); 
           if (j==0) { leftTestWrapper.append('<a href="' + product.url + '" id="left-arrow-link"><div class="left-test">{{ "arrow_light_left.jpg" | asset_url | img_tag: 'Light Left Arrow', 'light-left-arrow' }}{{ "arrow_dark_left.jpg" | asset_url | img_tag: 'Dark Left Arrow', 'dark-left-arrow' }}</div></a>'); } // some more click-through arrows code
           if (j==3) { rightTestWrapper.append('<a href="' + product.url + '" id="right-arrow-link"><div class="right-test">{{ "arrow_light_right.jpg" | asset_url | img_tag: 'Light Right Arrow', 'light-right-arrow' }}{{ "arrow_dark_right.jpg" | asset_url | img_tag: 'Dark Right Arrow', 'dark-right-arrow' }}</div></a>'); }
          }
        },
        url: '/products/' + crosssell[j] + '.js?'
      }); 
    }
  } 
 }

//Cross-sell settings
var settingsoutput = '';
jQuery.each(crosssellsettings[0], function(key, value){
  	settingsoutput += '<input type="hidden" name="' + key + '" id="cs_' + key + '" value="' + value + '" />';    	
});	       
jQuery('#cross-sell').append(settingsoutput);

//]]>
</script>


<!-- Currency conversion widget. -->
    {{ "/services/javascripts/currencies.js" | script_tag }}
    {{ "jquery.currencies.min.js" | asset_url | script_tag }}
    <script>
      function identifyCountry(callback) {
      jQuery.ajax( { 
        url: '//freegeoip.net/json/', 
        type: 'POST', 
        dataType: 'jsonp',
        success: function(location) {
          switch (location.country_code) {
            case "AU":
              local_currency = "AUD";
              break;
            case "AT":
              local_currency = "EUR";
              break;
            case "AR":
              local_currency = "ARS";
              break;
            case "BE":
              local_currency = "EUR";
              break;
            case "BR":
              local_currency = "BRL";
              break;
            case "CA":
              local_currency = "CAD";
              break;
            case "CO":
              local_currency = "COP";
              break;
            case "CY":
              local_currency = "EUR";
              break;
            case "DK":
              local_currency = "DKK";
              break;
            case "EE":
              local_currency = "EUR";
              break;
            case "FI":
              local_currency = "EUR";
              break;
            case "FR":
              local_currency = "EUR";
              break;
            case "DE":
              local_currency = "EUR";
              break;
            case "GR":
              local_currency = "EUR";
              break;
            case "HK":
              local_currency = "HKD";
              break;
            case "HR":
              local_currency = "HRK";
              break;
            case "IN":
              local_currency = "INR";
              break;
            case "IE":
              local_currency = "EUR";
              break;
            case "IT":
              local_currency = "EUR";
              break;
            case "IL":
              local_currency = "ILS";
              break;
            case "JP":
              local_currency = "JPY";
              break;
            case "KR":
              local_currency = "KRW";
              break;
            case "LV":
              local_currency = "EUR";
              break;
            case "LU":
              local_currency = "EUR";
              break;
            case "MX":
              local_currency = "MXN";
              break;
            case "MY":
              local_currency = "MYR";
              break;
            case "NL":
              local_currency = "EUR";
              break;
            case "NO":
              local_currency = "NOK";
              break;
            case "NZ":
              local_currency = "NZD";
              break;
            case "PH":
              local_currency = "PHP";
              break;
            case "PT":
              local_currency = "EUR";
              break;
            case "RU":
              local_currency = "RUB";
              break;
            case "SA":
              local_currency = "SAR";
              break;
            case "SG":
              local_currency = "SGD";
              break;
            case "SK":
              local_currency = "EUR";
              break;
            case "SI":
              local_currency = "EUR";
              break;
            case "ES":
              local_currency = "EUR";
              break;
            case "SE":
              local_currency = "SEK";
              break;
            case "CH":
              local_currency = "CHF";
              break;
            case "TW":
              local_currency = "TWD";
              break;
            case "TR":
              local_currency = "TRY";
              break;
            case "AE":
              local_currency = "AED";
              break;
            case "GB":
              local_currency = "GBP";
              break;
            case "CN":
              local_currency = "CNY";
            case "KZ":
              local_currency = "KZT";
            case "TH":
              local_currency = "THB";
            case "QA":
              local_currency = "QAR";
            case "KW":
              local_currency = "KWD";
            default:
              local_currency = "";
          }
          callback(local_currency);
        } 
      } );
      }
      
      function currencyCallback(localCurrency) {
        if (localCurrency) {
          $('#converted-currency').html("<span class='money'>${{product.price}} USD</span> (estimate)");
          Currency.convertAll("USD", localCurrency, "span.money");
        }
      } 
      
      identifyCountry(currencyCallback);
      
    </script>

<!-- Assign product-specific retargeting buckets. -->

<script>
var tags = [];
{% for tag in product.tags %}
  tags.push("{{tag}}");
{% endfor %}
assignBucket(tags);
              
function assignBucket(tags) {
  if (tags.indexOf("classics") > -1 ) {
    if(!_rt_calls){ var _rt_calls = []; }
    _rt_calls.push({"type":"segment", "id":[9866]});
  } else if (tags.indexOf("mirrorshades") > -1 ) {
    if(!_rt_calls){ var _rt_calls = []; }
    _rt_calls.push({"type":"segment", "id":[9864]});
  } else if (tags.indexOf("neons") > -1 ) {
    if(!_rt_calls){ var _rt_calls = []; }
    _rt_calls.push({"type":"segment", "id":[9865]});
  } else if (tags.indexOf("voyager classics") > -1 ) {
    if(!_rt_calls){ var _rt_calls = []; }
    _rt_calls.push({"type":"segment", "id":[9863]});
  } else if (tags.indexOf("voyager neons") > -1 ) {
    if(!_rt_calls){ var _rt_calls = []; }
    _rt_calls.push({"type":"segment", "id":[9862]});
  } else {
    if(!_rt_calls){ var _rt_calls = []; }
    _rt_calls.push({"type":"segment", "id":[9861]});
  }
}
</script>